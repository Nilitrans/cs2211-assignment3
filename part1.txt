#include <stdio.h>
#include <stdlib.h>
/*initialize the two functions*/
float m_exp(float sub_exp, char op);
float s_exp(void);

int main() {
	char userType ;
	float result;
	printf("Please enter a simple arithmetic expression: ");
	result = s_exp(0, '+');
	printf("%.2f\n", result);

	printf("Continuing or not Y for yes and N for quit");
	scanf("%c", &userType);
	if (userType == 'Y') {
		main();
	}
		
	else {
		exit;
	}

}

char get_op() {         // get op one by one 
	char op = ' ';
	while (op == ' ')
	{
		scanf("%c", &op);
	}
	return op;
}

float get_num() {     // get number one by one
	float num;
	scanf(" %f", &num);
	//printf("num");
	return num;
}

float m_exp(float sub_exp, char op) {
	float next_num;
	char next_op;

	if (op == '\n' || op == '+' || op == '-') {
		ungetc(op, stdin); 
		return sub_exp; // return the base case

	}
	else {
		float next_sub_exp;
		next_num = get_num(); // get the next num by calling get_num()
		next_op = get_op();  // get the next op by calling get_op()
		if (op == '*') {
			next_sub_exp = sub_exp * next_num;

		}
		else if (op == '/') {
			next_sub_exp = sub_exp / next_num;
		}
		else {
		}

		return m_exp(next_sub_exp, next_op); // recursive call the m_exp()
	}

}

float s_exp(void) {
	char l_op;
	float num;                   //next num to calculate
	float s_expression;
	s_expression = m_exp(1, '*');// last num to calculate m_exp1
	l_op = get_op();             // op now
	
	while (l_op == '+' || l_op == '-'){// check the l_op right now
		
		if (l_op == '+') {
			num = m_exp(1, '*');		// call m_exp to get m_exp2
			
			s_expression = s_expression + num;
			
		}
		else if (l_op == '-') {
			num = m_exp(1, '*');      // get m_exp2
			s_expression = s_expression - num;
		}
		else {
			printf("end~~~~~");
			exit;
		}
		l_op = get_op(); // point to the next op
	}
	return s_expression;
	                   
}
